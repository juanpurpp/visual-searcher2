<!DOCTYPE html>
<html>
	<head>
		<title>Searcher</title>
    <script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script> 
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
		<script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio"></script>
		<script>
			var colors = ['#ff0000', '#00ff00', '#0000ff', '#ffff00', '#ff00ff', '#00ffff', '#ff8000', '#800080']
			var myChart = undefined
			var ws = new WebSocket('{{api}}/ws');
			var results = []
			var algsTried = []
			var startMaze =document.getElementById('maze')
			addEventListener("load", () => document.getElementById('step').checked =false);
			ws.onmessage = function(event) {
				const data = JSON.parse(event.data)
				console.log(data)
				const newPos = document.getElementById(`i-${data.row}-${data.col}`)
				const oldPos = document.getElementById(`i-${data.oldRow}-${data.oldCol}`)
				for (choice of data.choices){
					const choiceBlock = document.getElementById(`i-${choice[0]}-${choice[1]}`)
					choiceBlock.className='w-4 h-4 bg-amber-200 flex justify-center items-center'
				}
				newPos.className= data.finished ? 'w-4 h-4 bg-blue-700' : 'w-4 h-4 bg-blue-400'
				if(oldPos) oldPos.className='w-4 h-4 bg-violet-200 flex justify-center items-center'
				if(data.finished == true){
					console.log('finished')
					for(pos of data.path){
						const pathUnit = document.getElementById(`i-${pos[0]}-${pos[1]}`)
						const internalPath = document.createElement("div");
						internalPath.className = 'w-3 h-3 bg-cyan-700 rounded-3xl'
						pathUnit.appendChild(internalPath)
					}
					document.getElementById('step-button').disabled = true
					document.getElementById('start-button').disabled = false
				}
				results[results.length-1].push(data.iterations+data.left)
				document.getElementById('visited').innerHTML = 'Visited: '+ data.visited
				document.getElementById('left').innerHTML = 'Left: '+ data.left
				document.getElementById('iterations').innerHTML = 'Iterations: '+ data.iterations
				document.getElementById('time').innerHTML = 'Time: '+ data.time
				document.getElementById('depth-level').innerHTML = 'Depth level: '+ data.current_depth

				if (typeof(this.myChart) != "undefined") {
            this.myChart.destroy();
        }
				this.myChart = new Chart(
					document.getElementById('benchmarks').getContext('2d'),
					{
						type: 'line',
						options: {
							animation: false,
							plugins: {
								legend: {
									display: false
								},
								tooltip: {
									enabled: false
								}
							}
						},
						data: {
							labels: Array.from(Array(Math.max(...results.map(res=>res.length))).keys()),
							datasets: results.map((set, index)=>(
								
								{
									label: algsTried[index],
									data: set,
									borderColor: colors[index],
									fill: false,
								}
							
							))
						}
					}
				);

				//if(data.finished) ws.close()
			};
			function sendStart(event){
				results.push(([]))
				if (this.startMaze == null) {
          this.startMaze = structuredClone(document.getElementById('maze').innerHTML)
        }
				document.getElementById('maze').innerHTML = this.startMaze
				let delay = document.getElementById("delay");
				let alg = document.querySelector('input[name="alg"]:checked').value;
				console.log(document.getElementById('step'))
				let step = document.getElementById('step').checked;
				algsTried.push(alg)
				ws.send(JSON.stringify({action: 'start', delay: parseFloat(delay.value), alg: alg, stepMode: step}))
				event.preventDefault()

				document.getElementById('step-button').disabled = false
				document.getElementById('start-button').disabled = true
				
			}
			function sendNextStep(event){
				ws.send('next')
				event.preventDefault()
			}
			function onStepModeChange(event){
				if(event.target.checked) document.getElementById('step-button').className = 'w-full border border-slate-600 bg-slate-100 px-2 py-1 rounded disabled:bg-gray-300 disabled:text-gray-500'
				else document.getElementById('step-button').className = 'hidden w-full border border-slate-600 bg-slate-100 px-2 py-1 rounded disabled:bg-gray-300 disabled:text-gray-500'
			}
		</script>
	</head>
	<body class="flex flex-col justify-between h-screen">
		<div class="w-screen flex flex-col justify-start items-center">
			<h1 class="text-2xl text-slate-700 font-semibold">Visual Maze Solution Searcher v2 by Juanpurpp</h1>
			<div class="w-full flex flex-row p-4 text-slate-600">
				<div id="maze" class="w-full bg-blue-100 p-2 rounded-md border-2 border-sky-200 justify-center items-center">
					{{#list}} {{/list}}
				</div>
				<form class="w-full flex flex-col space-y-2 justify-start p-4" action="" onsubmit="sendStart(event)">
					<div class="w-full flex flex-row justify-start items-center">
						<p>Delay: </p>
						<input class="m-1 p-0.5 rounded-md border border-slate-500" type="number" id="delay" value="0.005" min="0" max="50" step="0.005" required/>
					</div>
					<div class="w-full flex flex-row justify-start items-center space-x-3">
						<div class="flex flex-row items-center space-x-1">
							<input type="radio" id="breadth" name="alg" value="breadth" checked />
							<label for="breadth">Breadth First Search</label>
						</div>
						<div class="flex flex-row items-center space-x-1">
							<input type="radio" id="depth" name="alg" value="depth" checked />
							<label for="depth">Depth First Search</label>
						</div>
						<div class="flex flex-row items-center space-x-1">
							<input type="radio" id="best" name="alg" value="best" />
							<label for="best">Best First Search</label>
						</div>
					</div>
					<div class="w-full">
						<div class="flex flex-row items-center space-x-1">
							<input autocomplete="off" onchange="onStepModeChange(event)" class="rounded-md" type="checkbox" id="step" checked="false"/>
							<label for="step">Activate step by step mode</label>
						</div>
						
					</div>
					<div class="w-full flex flex-col justify-center mt-32 space-y-1">
						<button id="start-button" class="w-full border border-slate-600 bg-slate-100 px-2 py-1 rounded disabled:bg-gray-300 disabled:text-gray-500">Start</button>
						<button disabled id="step-button" type="button" onclick="sendNextStep(event)" class="hidden w-full border border-slate-600 bg-slate-100 px-2 py-1 rounded disabled:bg-gray-300 disabled:text-gray-500">Next Step</button>
					</div>
					<div class="w-full flex flex-col ">
						<p class="font-semibold"> Results: </p>
						<div class="flex flex-row">
							<div class="w-full flex flex-col justify-stretch text-sm px-4">
								<p title="Purple ones, times that a node was checked if was goal" id="iterations" class="w-full">Iterations: </p>
								<p title="Yellow ones, choices that were not checked" id="left" class="w-full">Left: </p>
								<p title="Total states that were considered in memory" id="visited" class="w-full">Visited: </p>
							</div>
							<div class="w-full flex flex-col justify-stretch text-sm px-4">
								<p title="Depth level of solution node" id="depth-level" class="w-full">Depth level: </p>
								<p title="Time of execution" id="time" class="w-full">Time: </p>
							</div>
						</div>
						<canvas id="benchmarks"></canvas>
					</div>
				</form>
			</div>
		</div>
		<footer class="w-full flex flex-row space-x-1 justify-center items-center text-sm font-light text-slate-600 bg-slate-50">
			<i class="fa fa-github"></i>
			<p class="mr-1" >Project repo: </p>
  		<a class="text-blue-600" target="_blank" href="https://github.com/juanpurpp/visual-searcher2">github.com/juanpurpp/visual-searcher2</a>
		</footer>
	</body>
</html>